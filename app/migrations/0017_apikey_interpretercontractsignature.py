# Generated by Django 5.1.5 on 2025-04-16 02:17

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0016_deduction_reimbursement"),
    ]

    operations = [
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom pour identifier cette clé API", max_length=100
                    ),
                ),
                (
                    "app_name",
                    models.CharField(
                        help_text="Nom de l'application utilisant cette clé API",
                        max_length=100,
                    ),
                ),
                ("key", models.CharField(db_index=True, max_length=64, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Clé API",
                "verbose_name_plural": "Clés API",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InterpreterContractSignature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("interpreter_name", models.CharField(max_length=255)),
                ("interpreter_email", models.EmailField(max_length=254)),
                ("interpreter_phone", models.CharField(max_length=20)),
                ("interpreter_address", models.TextField()),
                ("bank_name", models.CharField(max_length=255)),
                (
                    "account_type",
                    models.CharField(
                        choices=[("checking", "Checking"), ("savings", "Savings")],
                        max_length=20,
                    ),
                ),
                ("encrypted_account_number", models.BinaryField(blank=True, null=True)),
                ("encrypted_routing_number", models.BinaryField(blank=True, null=True)),
                ("encrypted_swift_code", models.BinaryField(blank=True, null=True)),
                (
                    "contract_document",
                    models.FileField(upload_to="interpreter_contracts/"),
                ),
                ("contract_version", models.CharField(default="1.0", max_length=20)),
                (
                    "signature_type",
                    models.CharField(
                        choices=[
                            ("image", "Uploaded image"),
                            ("typography", "Typography signature"),
                            ("manual", "Manual signature"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "signature_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="signatures/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png", "jpeg"]
                            )
                        ],
                    ),
                ),
                (
                    "signature_typography_text",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "signature_manual_data",
                    models.TextField(
                        blank=True,
                        help_text="Coordinates of manual signature",
                        null=True,
                    ),
                ),
                ("signed_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField()),
                ("signature_hash", models.CharField(max_length=64)),
                (
                    "company_representative_name",
                    models.CharField(default="Marc-Henry Valme", max_length=255),
                ),
                (
                    "company_representative_signature",
                    models.TextField(blank=True, null=True),
                ),
                ("company_signed_at", models.DateTimeField(blank=True, null=True)),
                ("is_fully_signed", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Associated user account if available",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="interpreter_contracts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
