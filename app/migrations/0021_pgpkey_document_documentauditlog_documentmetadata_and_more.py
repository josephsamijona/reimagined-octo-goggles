# Generated by Django 5.2 on 2025-05-07 15:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0020_interpretercontractsignature_signature_typography_font_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="PGPKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nom descriptif de cette clé", max_length=255
                    ),
                ),
                (
                    "key_id",
                    models.CharField(
                        help_text="Identifiant de la clé PGP (16 derniers caractères de l'empreinte)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "fingerprint",
                    models.CharField(
                        blank=True,
                        help_text="Empreinte complète de la clé PGP",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "public_key",
                    models.TextField(help_text="Clé publique PGP au format ASCII"),
                ),
                (
                    "private_key_reference",
                    models.CharField(
                        help_text="Référence sécurisée à la clé privée (chemin ou identifiant)",
                        max_length=255,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "algorithm",
                    models.CharField(
                        blank=True,
                        help_text="Algorithme utilisé (RSA, etc.)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "key_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="Taille de la clé en bits", null=True
                    ),
                ),
                (
                    "user_name",
                    models.CharField(
                        blank=True,
                        help_text="Nom associé à la clé",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email associé à la clé",
                        max_length=254,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "PGP Key",
                "verbose_name_plural": "PGP Keys",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True,
                        help_text="Numéro unique du document (généré automatiquement)",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "agreement_id",
                    models.CharField(
                        blank=True,
                        help_text="ID de l'accord associé, si applicable",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("CONTRACT", "Contract"),
                            ("INVOICE", "Invoice"),
                            ("QUOTE", "Quote"),
                            ("CERTIFICATE", "Certificate"),
                            ("LETTER", "Letter"),
                            ("REPORT", "Report"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SIGNED", "Signed"),
                            ("SENT", "Sent"),
                            ("CANCELLED", "Cancelled"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="documents/%Y/%m/"
                    ),
                ),
                (
                    "file_hash",
                    models.CharField(
                        blank=True,
                        help_text="Hachage SHA-256 du fichier pour vérification d'intégrité",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "pgp_signature",
                    models.TextField(
                        blank=True, help_text="Signature PGP du document", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("signed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Métadonnées PDF et informations supplémentaires",
                    ),
                ),
                (
                    "interpreter_contract",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="documents",
                        to="app.interpretercontractsignature",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "signing_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="signed_documents",
                        to="app.pgpkey",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document",
                "verbose_name_plural": "Documents",
            },
        ),
        migrations.CreateModel(
            name="DocumentAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("UPDATE", "Update"),
                            ("SIGN", "Sign"),
                            ("VIEW", "View"),
                            ("DOWNLOAD", "Download"),
                            ("SEND", "Send"),
                            ("ARCHIVE", "Archive"),
                            ("CANCEL", "Cancel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to="app.document",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="document_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Audit Log",
                "verbose_name_plural": "Document Audit Logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DocumentMetadata",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("CONTRACT", "Contract"),
                            ("INVOICE", "Invoice"),
                            ("QUOTE", "Quote"),
                            ("CERTIFICATE", "Certificate"),
                            ("LETTER", "Letter"),
                            ("REPORT", "Report"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "company_name",
                    models.CharField(default="JH Bridge Translation", max_length=255),
                ),
                ("company_address", models.TextField(blank=True, null=True)),
                (
                    "company_logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="company_logos/"
                    ),
                ),
                ("company_footer", models.TextField(blank=True, null=True)),
                ("legal_text", models.TextField(blank=True, null=True)),
                (
                    "signature_position",
                    models.CharField(
                        default="bottom-right",
                        help_text="Position de la signature sur le document (top-left, bottom-right, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "signature_page",
                    models.IntegerField(
                        default=-1,
                        help_text="Page où placer la signature (-1 pour dernière page)",
                    ),
                ),
                (
                    "pdf_author",
                    models.CharField(default="JH Bridge Translation", max_length=255),
                ),
                (
                    "pdf_creator",
                    models.CharField(
                        default="JH Bridge Document System", max_length=255
                    ),
                ),
                ("pdf_keywords", models.TextField(blank=True, null=True)),
                (
                    "additional_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Métadonnées supplémentaires au format JSON",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Document Metadata",
                "verbose_name_plural": "Document Metadata",
                "unique_together": {("document_type",)},
            },
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["document_number"], name="app_documen_documen_b89143_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["agreement_id"], name="app_documen_agreeme_4b2083_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["document_type"], name="app_documen_documen_451c4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["created_at"], name="app_documen_created_da0f7b_idx"
            ),
        ),
    ]
